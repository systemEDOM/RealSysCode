{"version":3,"sources":["../src/index.js"],"names":["process","env","NODE_ENV","require","config","db","MongoStore","session","app","server","Server","io","mongoStore","mongooseConnection","passportSocketIo","passport","cookieParser","use","express","static","__dirname","engine","hbs","set","bodyParser","urlencoded","extended","secret","resave","saveUninitialized","store","initialize","req","res","next","locals","message","flash","user","routes","port","PORT","listen","console","log"],"mappings":";;AAIA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAfA,IAAIA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCC,EAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;AACH;;AAID,MAAMC,EAAE,GAAGF,OAAO,CAAC,mBAAD,CAAlB;;AAWA,MAAMG,UAAU,GAAGH,OAAO,CAAC,eAAD,CAAP,CAAyBI,uBAAzB,CAAnB;;AACA,MAAMC,GAAG,GAAG,uBAAZ;;AAEA,MAAMC,MAAM,GAAGN,OAAO,CAAC,MAAD,CAAP,CAAgBO,MAAhB,CAAuBF,GAAvB,CAAf;;AACA,MAAMG,EAAE,GAAGR,OAAO,CAAC,WAAD,CAAP,CAAqBM,MAArB,CAAX;;AAEA,IAAIG,UAAU,GAAG,IAAIN,UAAJ,CAAe;AAC5BO,EAAAA,kBAAkB,EAAER;AADQ,CAAf,CAAjB;;AAIAF,OAAO,CAAC,mBAAD,CAAP,CAA6BQ,EAA7B,EAAiCG,kBAAjC,EAAmDC,iBAAnD,EAA6DC,qBAA7D,EAA2EJ,UAA3E;;AAEAJ,GAAG,CAACS,GAAJ,CAAQC,iBAAQC,MAAR,CAAeC,SAAS,GAAG,aAA3B,CAAR;AAEAZ,GAAG,CAACa,MAAJ,CAAW,KAAX,EAAkBC,mBAAlB;AACAd,GAAG,CAACe,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AAEAf,GAAG,CAACS,GAAJ,CAAQO,oBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAlB,GAAG,CAACS,GAAJ,CAAQ,6BAAe,SAAf,CAAR;AACAT,GAAG,CAACS,GAAJ,CAAQ,2BAAa,WAAb,CAAR;AACAT,GAAG,CAACS,GAAJ,CAAQ,6BAAQ;AAAEU,EAAAA,MAAM,EAAE,WAAV;AAAuBC,EAAAA,MAAM,EAAE,IAA/B;AAAqCC,EAAAA,iBAAiB,EAAE,IAAxD;AAA8DC,EAAAA,KAAK,EAAElB;AAArE,CAAR,CAAR;AACAJ,GAAG,CAACS,GAAJ,CAAQF,kBAASgB,UAAT,EAAR;AACAvB,GAAG,CAACS,GAAJ,CAAQF,kBAASR,OAAT,EAAR;AACAC,GAAG,CAACS,GAAJ,CAAQ,4BAAR;AACAT,GAAG,CAACS,GAAJ,CAAQ,CAACe,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxBD,EAAAA,GAAG,CAACE,MAAJ,CAAWC,OAAX,GAAqBJ,GAAG,CAACK,KAAJ,EAArB;AACAJ,EAAAA,GAAG,CAACE,MAAJ,CAAWG,IAAX,GAAkBN,GAAG,CAACM,IAAJ,IAAY,IAA9B;AACAJ,EAAAA,IAAI;AACP,CAJD;AAKA1B,GAAG,CAACS,GAAJ,CAAQsB,cAAR;AAGA,MAAMC,IAAI,GAAGxC,OAAO,CAACC,GAAR,CAAYwC,IAAZ,IAAoB,IAAjC;AACAhC,MAAM,CAACiC,MAAP,CAAcF,IAAd,EAAoB,MAAM;AACtBG,EAAAA,OAAO,CAACC,GAAR,CAAa,qCAAoCJ,IAAK,EAAtD;AACH,CAFD","sourcesContent":["if (process.env.NODE_ENV === 'development') {\r\n    require('dotenv').config()\r\n}\r\n\r\nimport express from \"express\";\r\nimport bodyParser from \"body-parser\";\r\nconst db = require(\"./config/database\");\r\nimport hbs from \"./config/handlebars\";\r\nimport routes from './routes/index';\r\nimport flash from 'connect-flash';\r\nimport passport from 'passport';\r\nimport cookieParser from 'cookie-parser';\r\nimport session from 'express-session';\r\nimport methodOverride from 'method-override';\r\nimport configPassport from './config/passport';\r\nimport passportSocketIo from 'passport.socketio';\r\n\r\nconst MongoStore = require('connect-mongo')(session);\r\nconst app = express();\r\n\r\nconst server = require('http').Server(app);\r\nconst io = require('socket.io')(server);\r\n\r\nvar mongoStore = new MongoStore({\r\n    mongooseConnection: db,\r\n});\r\n\r\nrequire('./realtime/editor')(io, passportSocketIo, passport, cookieParser, mongoStore);\r\n\r\napp.use(express.static(__dirname + \"/../public/\"));\r\n\r\napp.engine(\"hbs\", hbs);\r\napp.set(\"view engine\", \"hbs\");\r\n\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(methodOverride('_method'));\r\napp.use(cookieParser('secret123'));\r\napp.use(session({ secret: 'secret123', resave: true, saveUninitialized: true, store: mongoStore }));\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.use(flash());\r\napp.use((req, res, next) => {\r\n    res.locals.message = req.flash();\r\n    res.locals.user = req.user || null;\r\n    next();\r\n});\r\napp.use(routes);\r\n\r\n\r\nconst port = process.env.PORT || 3000;\r\nserver.listen(port, () => {\r\n    console.log(`Server is up and running on port: ${port}`);\r\n});"],"file":"index.js"}