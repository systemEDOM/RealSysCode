{"version":3,"sources":["../src/index.js"],"names":["process","env","NODE_ENV","require","config","console","log","db","MongoStore","session","app","server","Server","io","use","express","static","__dirname","engine","hbs","set","mongoStore","mongooseConnection","bodyParser","urlencoded","extended","secret","resave","saveUninitialized","store","passport","initialize","req","res","next","locals","message","flash","user","routes","sockets","usersByRoom","passportSocketIo","authorize","key","cookieParser","on","socket","currRoom","request","_query","snippetID","_id","room","join","Object","keys","adapter","rooms","forEach","sock","userByRoom","connected","in","emit","users","eventData","id","broadcast","to","value","userId","port","PORT","listen"],"mappings":"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","sourcesContent":["if (process.env.NODE_ENV === 'development') {\r\n    require('dotenv').config()\r\n}\r\n\r\nconsole.log(process.env.NODE_ENV);\r\n//console.log(process.env.MONGODB_URI);\r\n\r\nimport express from \"express\";\r\nimport bodyParser from \"body-parser\";\r\nconst db = require(\"./config/database\");\r\nimport hbs from \"./config/handlebars\";\r\nimport routes from './routes/index';\r\nimport flash from 'connect-flash';\r\nimport passport from 'passport';\r\nimport cookieParser from 'cookie-parser';\r\nimport session from 'express-session';\r\nimport methodOverride from 'method-override';\r\nimport configPassport from './config/passport';\r\nimport passportSocketIo from 'passport.socketio';\r\n\r\nconst MongoStore = require('connect-mongo')(session);\r\nconst app = express();\r\n\r\nconst server = require('http').Server(app);\r\nconst io = require('socket.io')(server);\r\n\r\napp.use(express.static(__dirname + \"/../public/\"));\r\n\r\napp.engine(\"hbs\", hbs);\r\napp.set(\"view engine\", \"hbs\");\r\n\r\nvar mongoStore = new MongoStore({\r\n    mongooseConnection: db,\r\n});\r\n\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(methodOverride('_method'));\r\napp.use(cookieParser('secret123'));\r\napp.use(session({ secret: 'secret123', resave: true, saveUninitialized: true, store: mongoStore }));\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.use(flash());\r\napp.use((req, res, next) => {\r\n    res.locals.message = req.flash();\r\n    res.locals.user = req.user || null;\r\n    next();\r\n});\r\napp.use(routes);\r\n\r\nlet sockets = {};\r\nlet usersByRoom = {};\r\nio.use(passportSocketIo.authorize({\r\n    key: 'connect.sid',\r\n    secret: \"secret123\",\r\n    passport: passport,\r\n    cookieParser: cookieParser,\r\n    store: mongoStore,\r\n}));\r\nio.on('connection', function (socket) {\r\n    let currRoom = socket.request._query.snippetID;\r\n    if (!sockets[socket.request.user._id]) {\r\n        console.log(\"Client connected\");\r\n        socket.room = currRoom;\r\n        sockets[socket.request.user._id] = socket;\r\n    }\r\n\r\n    //socket.join(currRoom);\r\n\r\n\r\n    //console.log(io.sockets.adapter.rooms[currRoom], currRoom);\r\n    \r\n    \r\n    //socket.to(currRoom).emit('joined', { users: usersByRoom });\r\n\r\n    socket.on('create', function (room) {\r\n        socket.join(room);\r\n        Object.keys(io.sockets.adapter.rooms[currRoom].sockets).forEach( sock => {\r\n            let userByRoom = io.sockets.connected[sock].request.user;\r\n            usersByRoom[userByRoom._id] = userByRoom;\r\n        });\r\n        console.log(usersByRoom);\r\n        console.log(\"emiting...\", room);\r\n        \r\n        io.in(room).emit('joined', { users: usersByRoom });\r\n    });\r\n\r\n\r\n    socket.on('code_emit', function (eventData) {\r\n        if (socket.request.user && sockets[socket.request.user._id]) {\r\n            console.log(eventData.id);\r\n            socket.broadcast.to(eventData.id).emit(\"get_code_emit\", eventData.value);\r\n        }\r\n    });\r\n\r\n    socket.on('disconnect', function (eventData) {\r\n        console.log(\"disconnected\");\r\n        Object.keys(sockets).forEach( userId => {\r\n            let sock = sockets[userId];\r\n            if (sock.id == socket.id) {\r\n                sockets[userId] = null;\r\n            }\r\n        });\r\n    });\r\n});\r\n\r\nconst port = process.env.PORT || 3000;\r\nserver.listen(port, () => {\r\n    console.log(`Server is up and running on port: ${port}`);\r\n});"],"file":"index.js"}