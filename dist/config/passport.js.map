{"version":3,"sources":["../../src/config/passport.js"],"names":["passport","use","Strategy","usernameField","passwordField","email","password","done","UserRepository","findOne","then","user","message","match","matchPassword","serializeUser","id","deserializeUser","findById","err"],"mappings":";;AAAA;;AACA;;AAEA;;AACA;;;;;;;;AAEAA,kBAASC,GAAT,CAAa,IAAIC,uBAAJ,CAAa;AACtBC,EAAAA,aAAa,EAAE,OADO;AAEtBC,EAAAA,aAAa,EAAE;AAFO,CAAb,EAGV,OAAOC,KAAP,EAAcC,QAAd,EAAwBC,IAAxB,KAAiC;AAChC,QAAMC,wBAAeC,OAAf,CAAuBJ,KAAvB,EAA8BK,IAA9B,CAAoC,MAAMC,IAAN,IAAc;AACpD,QAAI,CAACA,IAAL,EAAW;AACP,aAAOJ,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc;AAAEK,QAAAA,OAAO,EAAE;AAAX,OAAd,CAAX;AACH,KAFD,MAEO;AACH,YAAMC,KAAK,GAAG,MAAMF,IAAI,CAACG,aAAL,CAAmBR,QAAnB,CAApB;;AACA,UAAIO,KAAJ,EAAW;AACP,eAAON,IAAI,CAAC,IAAD,EAAOI,IAAP,CAAX;AACH,OAFD,MAEO;AACH,eAAOJ,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc;AAAEK,UAAAA,OAAO,EAAE;AAAX,SAAd,CAAX;AACH;AACJ;AACJ,GAXK,CAAN;AAYH,CAhBY,CAAb;;AAkBAZ,kBAASe,aAAT,CAAuB,UAAUJ,IAAV,EAAgBJ,IAAhB,EAAsB;AACzCA,EAAAA,IAAI,CAAC,IAAD,EAAOI,IAAI,CAACK,EAAZ,CAAJ;AACH,CAFD;;AAIAhB,kBAASiB,eAAT,CAAyB,gBAAgBD,EAAhB,EAAoBT,IAApB,EAA0B;AAC/C,QAAMC,wBAAeU,QAAf,CAAwBF,EAAxB,EAA4BN,IAA5B,CAAkC,CAACC,IAAD,EAAOQ,GAAP,KAAe;AACnDZ,IAAAA,IAAI,CAACY,GAAD,EAAMR,IAAN,CAAJ;AACH,GAFK,CAAN;AAGH,CAJD","sourcesContent":["import LocalStrategy from 'passport-local';\r\nimport passport from 'passport';\r\nimport { Strategy } from 'passport-local';\r\nimport User from '../schema/user.schema';\r\nimport UserRepository from '../repositories/UserRepository';\r\n\r\npassport.use(new Strategy({\r\n    usernameField: 'email',\r\n    passwordField: 'password',\r\n}, async (email, password, done) => {\r\n    await UserRepository.findOne(email).then( async user => {\r\n        if (!user) {\r\n            return done(null, false, { message: 'Not user found' })\r\n        } else {\r\n            const match = await user.matchPassword(password);\r\n            if (match) {\r\n                return done(null, user);\r\n            } else {\r\n                return done(null, false, { message: 'Incorrect credentials' })\r\n            }\r\n        }\r\n    });\r\n}));\r\n\r\npassport.serializeUser(function (user, done) {\r\n    done(null, user.id);\r\n});\r\n\r\npassport.deserializeUser(async function (id, done) {\r\n    await UserRepository.findById(id).then( (user, err) => {\r\n        done(err, user); \r\n    });\r\n});"],"file":"passport.js"}