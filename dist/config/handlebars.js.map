{"version":3,"sources":["../../src/config/handlebars.js"],"names":["path","__dirname","hbs","defaultLayout","extname","layoutsDir","partialsDir","handlebars","Handlebars","section","helpers","compare","lvalue","operator","rvalue","options","operators","result","arguments","length","Error","undefined","l","r","fn","inverse","name","_sections","module","exports"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,IAAI,GAAGC,SAAS,GAAG,eAAzB;AAGA,MAAMC,GAAG,GAAG,gCAAW;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,UAAU,EAAEL,IAAI,GAAG,UAHA;AAInBM,EAAAA,WAAW,EAAEN,IAAI,GAAG,SAJD;AAKnBO,EAAAA,UAAU,EAAE,wDAA6BC,mBAA7B,CALO;AAMnBC,EAAAA,OAAO,EAAE,yCANU;AAOnBC,EAAAA,OAAO,EAAE,EACL,GAAG,iCADE;AAELC,IAAAA,OAAO,EAAE,UAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,MAA5B,EAAoCC,OAApC,EAA6C;AAElD,UAAIC,SAAJ,EAAeC,MAAf;;AAEA,UAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACtB,cAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACH;;AAED,UAAIL,OAAO,KAAKM,SAAhB,EAA2B;AACvBN,QAAAA,OAAO,GAAGD,MAAV;AACAA,QAAAA,MAAM,GAAGD,QAAT;AACAA,QAAAA,QAAQ,GAAG,KAAX;AACH;;AAEDG,MAAAA,SAAS,GAAG;AACR,cAAM,UAAUM,CAAV,EAAaC,CAAb,EAAgB;AAAE,iBAAOD,CAAC,IAAIC,CAAZ;AAAgB,SADhC;AAER,eAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,iBAAOD,CAAC,KAAKC,CAAb;AAAiB,SAFlC;AAGR,cAAM,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,iBAAOD,CAAC,IAAIC,CAAZ;AAAgB,SAHhC;AAIR,eAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,iBAAOD,CAAC,KAAKC,CAAb;AAAiB,SAJlC;AAKR,aAAK,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,iBAAOD,CAAC,GAAGC,CAAX;AAAe,SAL9B;AAMR,aAAK,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,iBAAOD,CAAC,GAAGC,CAAX;AAAe,SAN9B;AAOR,cAAM,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,iBAAOD,CAAC,IAAIC,CAAZ;AAAgB,SAPhC;AAQR,cAAM,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,iBAAOD,CAAC,IAAIC,CAAZ;AAAgB,SARhC;AASR,kBAAU,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,iBAAO,OAAOD,CAAP,IAAYC,CAAnB;AAAuB;AAT3C,OAAZ;;AAYA,UAAI,CAACP,SAAS,CAACH,QAAD,CAAd,EAA0B;AACtB,cAAM,IAAIO,KAAJ,CAAU,4DAA4DP,QAAtE,CAAN;AACH;;AAEDI,MAAAA,MAAM,GAAGD,SAAS,CAACH,QAAD,CAAT,CAAoBD,MAApB,EAA4BE,MAA5B,CAAT;;AAEA,UAAIG,MAAJ,EAAY;AACR,eAAOF,OAAO,CAACS,EAAR,CAAW,IAAX,CAAP;AACH,OAFD,MAEO;AACH,eAAOT,OAAO,CAACU,OAAR,CAAgB,IAAhB,CAAP;AACH;AAEJ,KAxCI;AAyCLhB,IAAAA,OAAO,EAAE,UAASiB,IAAT,EAAeX,OAAf,EAAwB;AAC7B,UAAG,CAAC,KAAKY,SAAT,EAAmB;AAAC,aAAKA,SAAL,GAAiB,EAAjB;AAAoB;;AAAA;AACxC,WAAKA,SAAL,CAAeD,IAAf,IAAuBX,OAAO,CAACS,EAAR,CAAW,IAAX,CAAvB;AACA,aAAO,IAAP;AACH;AA7CI;AAPU,CAAX,CAAZ;AAwDAI,MAAM,CAACC,OAAP,GAAiB3B,GAAjB","sourcesContent":["import handlebars from \"express-handlebars\";\r\nimport Handlebars from 'handlebars'\r\nimport { allowInsecurePrototypeAccess } from '@handlebars/allow-prototype-access'\r\nimport express_handlebars_sections from 'express-handlebars-sections';\r\nimport helpers from 'handlebars-helpers';\r\n\r\nconst path = __dirname + '/../../views/';\r\n\r\n\r\nconst hbs = handlebars({\r\n    defaultLayout: \"app\",\r\n    extname: \"hbs\",\r\n    layoutsDir: path + \"layouts/\",\r\n    partialsDir: path + \"common/\",\r\n    handlebars: allowInsecurePrototypeAccess(Handlebars),\r\n    section: express_handlebars_sections(),\r\n    helpers: {\r\n        ...helpers(),\r\n        compare: function (lvalue, operator, rvalue, options) {\r\n\r\n            var operators, result;\r\n        \r\n            if (arguments.length < 3) {\r\n                throw new Error(\"Handlerbars Helper 'compare' needs 2 parameters\");\r\n            }\r\n        \r\n            if (options === undefined) {\r\n                options = rvalue;\r\n                rvalue = operator;\r\n                operator = \"===\";\r\n            }\r\n        \r\n            operators = {\r\n                '==': function (l, r) { return l == r; },\r\n                '===': function (l, r) { return l === r; },\r\n                '!=': function (l, r) { return l != r; },\r\n                '!==': function (l, r) { return l !== r; },\r\n                '<': function (l, r) { return l < r; },\r\n                '>': function (l, r) { return l > r; },\r\n                '<=': function (l, r) { return l <= r; },\r\n                '>=': function (l, r) { return l >= r; },\r\n                'typeof': function (l, r) { return typeof l == r; }\r\n            };\r\n        \r\n            if (!operators[operator]) {\r\n                throw new Error(\"Handlerbars Helper 'compare' doesn't know the operator \" + operator);\r\n            }\r\n        \r\n            result = operators[operator](lvalue, rvalue);\r\n        \r\n            if (result) {\r\n                return options.fn(this);\r\n            } else {\r\n                return options.inverse(this);\r\n            }\r\n        \r\n        },\r\n        section: function(name, options) {\r\n            if(!this._sections){this._sections = {}};\r\n            this._sections[name] = options.fn(this);\r\n            return null;\r\n        },\r\n    }\r\n});\r\n\r\nmodule.exports = hbs;"],"file":"handlebars.js"}