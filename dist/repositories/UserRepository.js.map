{"version":3,"sources":["../../src/repositories/UserRepository.js"],"names":["UserRepository","constructor","model","create","userObject","update","_id","updateOne","findOneAndUpdate","updatePassword","password","User","$set","snippetsByUser","findOne","populate","email","findByUsername","slugUsername","findById","id"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,cAAN,CAAqB;AAEjBC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKA,KAAL,GAAaA,KAAb;AACH;;AAED,QAAMC,MAAN,CAAaC,UAAb,EAAyB;AACrB,WAAO,MAAM,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,UAAlB,CAAb;AACH;;AAED,QAAMC,MAAN,CAAaD,UAAb,EAAyBE,GAAzB,EAA8B;AAC1B,WAAO,MAAM,KAAKJ,KAAL,CAAWK,SAAX,CAAqB;AAAED,MAAAA;AAAF,KAArB,EAA8BF,UAA9B,CAAb;AACH;;AAED,QAAMI,gBAAN,CAAuBF,GAAvB,EAA4BF,UAA5B,EAAwC;AACpC,WAAO,MAAM,KAAKF,KAAL,CAAWM,gBAAX,CAA4B;AAAEF,MAAAA;AAAF,KAA5B,EAAqCF,UAArC,CAAb;AACH;;AAED,QAAMK,cAAN,CAAqBC,QAArB,EAA+BJ,GAA/B,EAAoC;AAChC,WAAO,MAAMK,cAAKJ,SAAL,CAAe;AAAED,MAAAA;AAAF,KAAf,EAAwB;AAAEM,MAAAA,IAAI,EAAE;AAAEF,QAAAA;AAAF;AAAR,KAAxB,CAAb;AACH;;AAED,QAAMG,cAAN,CAAqBP,GAArB,EAA0B;AACtB,WAAO,MAAM,KAAKJ,KAAL,CAAWY,OAAX,CAAmB;AAAER,MAAAA;AAAF,KAAnB,EAA4BS,QAA5B,CAAqC,UAArC,CAAb;AACH;;AAED,QAAMD,OAAN,CAAcE,KAAd,EAAqB;AACjB,WAAO,MAAM,KAAKd,KAAL,CAAWY,OAAX,CAAmB;AAAEE,MAAAA;AAAF,KAAnB,CAAb;AACH;;AAED,QAAMC,cAAN,CAAqBC,YAArB,EAAmC;AAC/B,WAAO,MAAM,KAAKhB,KAAL,CAAWY,OAAX,CAAmB;AAAEI,MAAAA;AAAF,KAAnB,CAAb;AACH;;AAED,QAAMC,QAAN,CAAeC,EAAf,EAAmB;AACf,WAAO,MAAM,KAAKlB,KAAL,CAAWiB,QAAX,CAAoBC,EAApB,CAAb;AACH;;AApCgB;;eAuCN,IAAIpB,cAAJ,CAAmBW,aAAnB,C","sourcesContent":["import User from '../schema/user.schema';\r\n\r\nclass UserRepository {\r\n\r\n    constructor(model) {\r\n        this.model = model;\r\n    }\r\n\r\n    async create(userObject) {\r\n        return await this.model.create(userObject);\r\n    }\r\n\r\n    async update(userObject, _id) {\r\n        return await this.model.updateOne({ _id }, userObject);\r\n    }\r\n\r\n    async findOneAndUpdate(_id, userObject) {\r\n        return await this.model.findOneAndUpdate({ _id }, userObject);\r\n    }\r\n\r\n    async updatePassword(password, _id) {\r\n        return await User.updateOne({ _id }, { $set: { password } });\r\n    }\r\n\r\n    async snippetsByUser(_id) {\r\n        return await this.model.findOne({ _id }).populate(\"snippets\");\r\n    }\r\n\r\n    async findOne(email) {\r\n        return await this.model.findOne({ email });\r\n    }\r\n\r\n    async findByUsername(slugUsername) {\r\n        return await this.model.findOne({ slugUsername });\r\n    }\r\n\r\n    async findById(id) {\r\n        return await this.model.findById(id);\r\n    }\r\n}\r\n\r\nexport default new UserRepository(User);"],"file":"UserRepository.js"}